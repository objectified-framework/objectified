name: Objectified Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

#    services:
#      postgres:
#        image: postgres:latest
#        env:
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: postgres
#          POSTGRES_PORT: 5432
#          POSTGRES_USER: postgres
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5

    env:
#      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      NEXTAUTH_URL: http://localhost:3000/api/auth
      SERVICE_URL: http://localhost:3001/
#      POSTGRES_USER: postgres
#      POSTGRES_HOST: localhost
#      POSTGRES_PORT: 5432
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: postgres
      DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Database Docker Image
        run: |
          cd objectified-db
          docker compose build
          docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_HOST}
          docker push objectified-db ${DOCKER_HOST}/objectified-db 

#      - name: Set up Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: "22"
#
#      - name: Install Docker Compose
#        run: |
#          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#          sudo chmod +x /usr/local/bin/docker-compose
#          docker-compose --version
#
#      - name: Log into Docker Remote
#        run: docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_HOST}
#
#      - name: Set up latest Yarn with corepack
#        run: corepack enable && corepack use yarn

#          docker compose push

#      - name: Build Service Docker Image
#        run: cd objectified-services && docker-compose build
#
#      - name: Build Documents Docker Image
#        run: cd objectified-docs && PORT="3001" docker-compose build
#
#      - name: Notify Build Server to Refresh
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#          NODERED_BASE_URL: ${{ secrets.NODERED_BASE_URL }}
#        run: wget --user ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD} "${NODERED_BASE_URL}/build/refresh"
