name: Objectified Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NEXTAUTH_URL: http://localhost:3000/api/auth
      SERVICE_URL: http://localhost:3001/
      UI_PORT: "3000"
      SERVICE_PORT: "3001"
      DOCKER_REMOTE: ${{ secrets.DOCKER_HOST }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      TAG_DB: 0.0.2
      TAG_DOCS: 0.0.1

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docs Site
        run: |
          cd objectified-docs
          PORT="${SERVICE_PORT}" docker compose build
          docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_REMOTE}
          docker image push ${DOCKER_REMOTE}/objectified-docs:${TAG_DOCS}

#      - name: Build Database Docker Image
#        run: |
#          cd objectified-db
#          docker compose build
#          docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${{ secrets.DOCKER_HOST }}
#          docker image tag objectified-db:${TAG_DB} ${{ secrets.DOCKER_HOST }}/objectified-db:${TAG_DB}
#          docker image push ${{ secrets.DOCKER_HOST }}/objectified-db:${TAG_DB}
#
#      - name: Build Service Docker Image
#        run: |
#          cd objectified-services
#          docker compose build
#
#
#      - name: Build Documents Docker Image
#        run: cd objectified-docs && PORT="3001" docker-compose build
#
#      - name: Notify Build Server to Refresh
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#          NODERED_BASE_URL: ${{ secrets.NODERED_BASE_URL }}
#        run: wget --user ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD} "${NODERED_BASE_URL}/build/refresh"
